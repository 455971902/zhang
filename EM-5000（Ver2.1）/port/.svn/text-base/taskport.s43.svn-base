

            EXTERN curTask    //引入当前任务变量
            EXTERN schdule
            
            
            
            
            
         PUBLIC initXTask ;     //初始化任务函数      
         
         RSEG CODE
         
                    
#ifdef   DATA_MODEL_SMALL                 
         initXTask:
                    PUSHX.A R4
                    PUSHX.A R5
                    PUSHX.A R6
                    
                    MOV.W SP,R6   //保存原来的堆栈
                     
                    MOV.W 0(R12),SP   //设置任务的堆栈
                    
                    MOVA 2(R12),R4    //保存20位的函数地址
                    PUSHX.A R4
                    
                    MOV.W #8,R4
                    PUSHX.A R4 ;SR
                    
                    MOV.W #0,R4
                    ;PUSHX.A R4 ;R3
                    PUSHX.A R4 ;R4
                    PUSHX.A R4 ;R5
                    PUSHX.A R4 ;R6
                    PUSHX.A R4 ;R7
                    PUSHX.A R4 ;R8
                    PUSHX.A R4 ;R9
                    PUSHX.A R4 ;R10
                    PUSHX.A R4 ;R11
                    PUSHX.A R4 ;R12
                    PUSHX.A R4 ;R13
                    PUSHX.A R4 ;R14
                    PUSHX.A R4 ;R15
                    
                    MOV.W SP,0(R12)
                    
                    MOV.W R6,SP
                    
                   
                    POPX.A R6
                    POPX.A R5
                    POPX.A R4
                
         
                    RETA



               PUBLIC start
          
               RSEG CODE
          
               start:
                      MOV.W R12,R4
                      MOV.W 0(R4),SP
                
                      POPX.A R15
                      POPX.A R14
                      POPX.A R13
                      POPX.A R12
                      POPX.A R11
                      POPX.A R10
                      POPX.A R9
                      POPX.A R8
                      POPX.A R7
                      POPX.A R6
                      POPX.A R5
                      POPX.A R4
                      ;POPX.A R3
                      POPX.A SR
                
                RETA
                
                
                
                
                
                PUBLIC intIsrPort

                RSEG CODE
                
                intIsrPort:
                
                      PUSHX.A SR
                      PUSHX.A R4
                      PUSHX.A R5
                      PUSHX.A R6
                      PUSHX.A R7
                      PUSHX.A R8
                      PUSHX.A R9
                      PUSHX.A R10
                      PUSHX.A R11
                      PUSHX.A R12
                      PUSHX.A R13
                      PUSHX.A R14
                      PUSHX.A R15    //保存任务上下文
                      
                      MOV.W curTask,R4
                      MOV.W SP,0(R4)     //保存堆栈寄存器
                      
                      
                      
                      
                      BIC.W 0xf0,R13
                      PUSH.W R13
                      PUSH.W R12
                      POPX.A R15
                      
                      PUSHX.A R14
                      
                      BIS.W #0x08,SR     //使能中断
                      NOP
                      CALLA R15          //执行中断服务程序
                      
                      
                      BIC.W #0x08,SR     //禁止中断
                      
                      NOP
                      
                      POPX.A R14
                      DEC.B 0(R14)
                      
                      JNZ RESTORE
                      
                      CALLA #schdule     //执行调度函数
                      
                      
                      MOV.W curTask,R4
                      MOV.W 0(R4),SP
                      
                      
          RESTORE:    POPX.A R15
                      POPX.A R14
                      POPX.A R13 
                      POPX.A R12
                      POPX.A R11
                      POPX.A R10
                      POPX.A R9
                      POPX.A R8
                      POPX.A R7
                      POPX.A R6
                      POPX.A R5
                      POPX.A R4
                      POPX.A SR
                      
                      BIC.W #0xF0,SR    //清除休眠位
                      NOP
                      
                      RETA 
                      
                      
                      
            /*          
                      
                PUBLIC  cli        //禁止中断函数
                
                RSEG   CODE
                
                 cli:
                      DINT
                      NOP
                      RETA
                      
                
                
                
                
                PUBLIC  sti        //允许中断函数
                
                RSEG   CODE
                
                  sti:
                      EINT
                      NOP
                      RETA
                      
            */    
                
                
                
              PUBLIC   swContexPort
              
              RSEG CODE
              
              swContexPort:
                      PUSHX.A SR
                      PUSHX.A R4
                      PUSHX.A R5
                      PUSHX.A R6
                      PUSHX.A R7
                      PUSHX.A R8
                      PUSHX.A R9
                      PUSHX.A R10
                      PUSHX.A R11
                      PUSHX.A R12
                      PUSHX.A R13
                      PUSHX.A R14
                      PUSHX.A R15    //保存任务上下文
                      
                      MOV.W curTask,R4
                      MOV.W SP,0(R4)     //保存堆栈寄存器
                      
                      CALLA #schdule     //执行调度函数
                      
                      
                      MOV.W curTask,R4
                      MOV.W 0(R4),SP
                      
                      
                      POPX.A R15
                      POPX.A R14
                      POPX.A R13 
                      POPX.A R12
                      POPX.A R11
                      POPX.A R10
                      POPX.A R9
                      POPX.A R8
                      POPX.A R7
                      POPX.A R6
                      POPX.A R5
                      POPX.A R4
                      POPX.A SR
                      
                      BIC.W #0xF0,SR    //清除休眠位
                      NOP
                      
                      RETA 
                      
#endif

#ifdef   DATA_MODEL_LARGE                     
                    
         initXTask:
                    PUSHX.A R4
                    PUSHX.A R5
                    PUSHX.A R6
                    
                    MOVX.A SP,R6   //保存原来的堆栈
                    
                    MOVX.A 0(R12),SP   //设置任务的堆栈
                    
                    MOVX.A 4(R12),R4    //保存20位的函数地址
                    PUSHX.A R4
                    
                    MOV.W #8,R4
                    PUSHX.A R4 ;SR
                    
                    MOV.W #0,R4
                    ;PUSHX.A R4 ;R3
                    PUSHX.A R4 ;R4
                    PUSHX.A R4 ;R5
                    PUSHX.A R4 ;R6
                    PUSHX.A R4 ;R7
                    PUSHX.A R4 ;R8
                    PUSHX.A R4 ;R9
                    PUSHX.A R4 ;R10
                    PUSHX.A R4 ;R11
                    PUSHX.A R4 ;R12
                    PUSHX.A R4 ;R13
                    PUSHX.A R4 ;R14
                    PUSHX.A R4 ;R15
                    
                    MOVX.A SP,0(R12)
                    
                    MOVX.A R6,SP
                    
                   
                    POPX.A R6
                    POPX.A R5
                    POPX.A R4
                
         
                    RETA



               PUBLIC start
          
               RSEG CODE
          
               start:
                      MOVX.A R12,R4
                      MOVX.A 0(R4),SP
                
                      POPX.A R15
                      POPX.A R14
                      POPX.A R13
                      POPX.A R12
                      POPX.A R11
                      POPX.A R10
                      POPX.A R9
                      POPX.A R8
                      POPX.A R7
                      POPX.A R6
                      POPX.A R5
                      POPX.A R4
                      ;POPX.A R3
                      POPX.A SR
                
                RETA
                
                
                
                
                
                PUBLIC intIsrPort

                RSEG CODE
                
                intIsrPort:
                
                      PUSHX.A SR
                      PUSHX.A R4
                      PUSHX.A R5
                      PUSHX.A R6
                      PUSHX.A R7
                      PUSHX.A R8
                      PUSHX.A R9
                      PUSHX.A R10
                      PUSHX.A R11
                      PUSHX.A R12
                      PUSHX.A R13
                      PUSHX.A R14
                      PUSHX.A R15    //保存任务上下文
                      
                      MOVX.A curTask,R4
                      MOVX.A SP,0(R4)     //保存堆栈寄存器
                      
                      
                      
                     
                      
                      PUSHX.A R13
                      
                      BIS.W #0x08,SR     //使能中断
                      NOP
                      CALLA R12          //执行中断服务程序
                      
                      
                      BIC.W #0x08,SR     //禁止中断
                      
                      NOP
                      
                      POPX.A R13
                      DEC.B 0(R13)
                      
                      JNZ RESTORE
                      
                      CALLA #schdule     //执行调度函数
                      
                      
                      MOVX.A curTask,R4
                      MOVX.A 0(R4),SP
                      
                      
          RESTORE:    POPX.A R15
                      POPX.A R14
                      POPX.A R13 
                      POPX.A R12
                      POPX.A R11
                      POPX.A R10
                      POPX.A R9
                      POPX.A R8
                      POPX.A R7
                      POPX.A R6
                      POPX.A R5
                      POPX.A R4
                      POPX.A SR
                      
                      BIC.W #0xF0,SR    //清除休眠位
                      NOP
                      
                      RETA 
                      
                      
                      
            /*          
                      
                PUBLIC  cli        //禁止中断函数
                
                RSEG   CODE
                
                 cli:
                      DINT
                      NOP
                      RETA
                      
                
                
                
                
                PUBLIC  sti        //允许中断函数
                
                RSEG   CODE
                
                  sti:
                      EINT
                      NOP
                      RETA
                      
            */    
                
                
                
              PUBLIC   swContexPort
              
              RSEG CODE
              
              swContexPort:
                      PUSHX.A SR
                      PUSHX.A R4
                      PUSHX.A R5
                      PUSHX.A R6
                      PUSHX.A R7
                      PUSHX.A R8
                      PUSHX.A R9
                      PUSHX.A R10
                      PUSHX.A R11
                      PUSHX.A R12
                      PUSHX.A R13
                      PUSHX.A R14
                      PUSHX.A R15    //保存任务上下文
                      
                      MOVX.A curTask,R4
                      MOVX.A SP,0(R4)     //保存堆栈寄存器
                      
                      CALLA #schdule     //执行调度函数
                      
                      
                      MOVX.A curTask,R4
                      MOVX.A 0(R4),SP
                      
                      
                      POPX.A R15
                      POPX.A R14
                      POPX.A R13 
                      POPX.A R12
                      POPX.A R11
                      POPX.A R10
                      POPX.A R9
                      POPX.A R8
                      POPX.A R7
                      POPX.A R6
                      POPX.A R5
                      POPX.A R4
                      POPX.A SR
                      
                      BIC.W #0xF0,SR    //清除休眠位
                      NOP
                      
                      RETA 

#endif

#ifdef   DATA_MODEL_MEDIUM

#error "本程序不支持 Medium Data Model 模式"
                      
#endif

                
                      



END